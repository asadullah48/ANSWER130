{"version":3,"file":"math-function-generator.cjs.production.min.js","sources":["../src/generators/MathFunction.ts","../src/utils/sanitizeEquationVariances.ts","../src/generators/Linear.ts","../src/generators/Quadratic.ts","../src/generators/Trigonometric.ts"],"sourcesContent":["export default abstract class MathFunction {\n  protected abstract equations: string[];\n  protected abstract subType: string | undefined;\n\n  public getEquations() {\n    return this.equations;\n  }\n\n  public getSubType() {\n    return this.subType;\n  }\n}\n","import { replace } from 'lodash';\n\nexport default function sanitizeEquationVariances(equationVariances: string[]) {\n  const sanitizedEquationVariances = equationVariances.map(equation =>\n    sanitizeEquation(equation)\n  );\n  return sanitizedEquationVariances;\n}\n\nfunction sanitizeEquation(equation: string) {\n  let sanitizedEquation: string = equation;\n  sanitizedEquation = replaceMinusMinus(sanitizedEquation);\n  sanitizedEquation = replacePlusPlus(sanitizedEquation);\n  sanitizedEquation = replacePlusMinus(sanitizedEquation);\n  sanitizedEquation = replaceMinusPlus(sanitizedEquation);\n  sanitizedEquation = replaceOne(sanitizedEquation);\n  return sanitizedEquation;\n}\n\nfunction replaceMinusPlus(equation: string) {\n  return replace(equation, /\\-\\040*\\+/gim, '- ');\n}\n\nfunction replacePlusMinus(equation: string) {\n  return replace(equation, /\\+\\040*\\-/gim, '- ');\n}\n\nfunction replacePlusPlus(equation: string) {\n  return replace(equation, /\\+\\040*\\+/gim, '+ ');\n}\n\nfunction replaceMinusMinus(equation: string) {\n  return replace(equation, /\\-\\040*\\-/gim, '+ ');\n}\n\nfunction replaceOne(equation: string) {\n  return replace(equation, /1(?=[A-Za-z(])]/gim, '');\n}\n","import { random } from 'lodash';\nimport NumberRange from '../entities/RandRange';\nimport GenerationOptions from '../entities/GenerationOptions';\nimport MathFunction from './MathFunction';\nimport sanitizeEquationVariances from '../utils/sanitizeEquationVariances';\n\nexport type LinearFunctionSubType =\n  | 'STANDARD'\n  | 'POINT-SLOPE'\n  | 'SLOPE-INTERCEPT';\n\nexport interface LinearGenerationOptions extends GenerationOptions {\n  subType?: LinearFunctionSubType;\n}\n\nexport class LinearFunction extends MathFunction {\n  protected subType: LinearFunctionSubType;\n  protected equations: string[];\n\n  constructor({\n    subType = 'SLOPE-INTERCEPT',\n    randRange = { min: 10, max: 20 },\n  }: LinearGenerationOptions = {}) {\n    super();\n    switch (subType) {\n      case 'POINT-SLOPE':\n        this.equations = this.generatePointSlopeVariances(randRange);\n        break;\n      case 'STANDARD':\n        this.equations = this.generateStandardVariances(randRange);\n        break;\n      case 'SLOPE-INTERCEPT':\n        this.equations = this.generateSlopeInterceptVariances(randRange);\n        break;\n      default:\n        this.equations = this.generateSlopeInterceptVariances(randRange);\n    }\n    this.equations = sanitizeEquationVariances(this.equations);\n    this.subType = subType;\n  }\n\n  private generateSlopeInterceptVariances(randRange: NumberRange) {\n    const m: number = random(randRange.min, randRange.max, false);\n    const b: number = random(randRange.min, randRange.max, false);\n    const equationVariances: string[] = [\n      `y = ${m}x + ${b}`,\n      `y = ${m}x + ${b * -1}`,\n      `y = ${m * -1}x + ${b}`,\n      `y = ${m * -1}x - ${b * -1}`,\n    ];\n    return equationVariances;\n  }\n\n  private generatePointSlopeVariances(randRange: NumberRange) {\n    const m: number = random(randRange.min, randRange.max, false);\n    const y1: number = random(randRange.min, randRange.max, false);\n    const x1: number = random(randRange.min, randRange.max, false);\n    const equationVariances: string[] = [\n      `y - ${y1} = ${m * -1}(x - ${x1})`,\n      `y - ${y1 * -1} = ${m}(x - ${x1})`,\n      `y - ${y1} = ${m}(x - ${x1 * -1})`,\n      `y - ${y1 * -1} = ${m}(x - ${x1 * -1})`,\n    ];\n    return equationVariances;\n  }\n\n  private generateStandardVariances(randRange: NumberRange) {\n    const a: number = random(randRange.min, randRange.max, false);\n    const b: number = random(randRange.min, randRange.max, false);\n    const c: number = random(randRange.min, randRange.max, false);\n    const equationVariances: string[] = [\n      `${a}x + ${b}y = ${c}`,\n      `${a * -1}x + ${b}y = ${c}`,\n      `${a}x + ${b * -1}y = ${c}`,\n      `${a * -1}x + ${b * -1}y = ${c}`,\n    ];\n    return equationVariances;\n  }\n}\n","import { random } from 'lodash';\nimport GenerationOptions from '../entities/GenerationOptions';\nimport NumberRange from '../entities/RandRange';\nimport sanitizeEquationVariances from '../utils/sanitizeEquationVariances';\nimport MathFunction from './MathFunction';\n\nexport type QuadraticFunctionSubType = 'STANDARD' | 'VERTEX' | 'FACTORED';\n\nexport interface QuadraticGenerationOptions extends GenerationOptions {\n  subType?: QuadraticFunctionSubType;\n}\n\nexport class QuadraticFunction extends MathFunction {\n  protected subType: QuadraticFunctionSubType;\n  protected equations: string[];\n\n  constructor({\n    subType = 'STANDARD',\n    randRange = { min: 10, max: 20 },\n  }: QuadraticGenerationOptions = {}) {\n    super();\n    switch (subType) {\n      case 'STANDARD':\n        this.equations = this.generateStandardVariances(randRange);\n        break;\n      case 'VERTEX':\n        this.equations = this.generateVertexVariances(randRange);\n        break;\n      case 'FACTORED':\n        this.equations = this.generateFactoredVariances(randRange);\n        break;\n      default:\n        this.equations = this.generateStandardVariances(randRange);\n    }\n    this.equations = sanitizeEquationVariances(this.equations);\n    this.subType = subType;\n  }\n\n  private generateStandardVariances(randRange: NumberRange): string[] {\n    const a: number = random(randRange.min, randRange.max, false);\n    const b: number = random(randRange.min, randRange.max, false);\n    const c: number = random(randRange.min, randRange.max, false);\n    const variances: string[] = [\n      `y = ${a}x^2 + ${b}x + ${c}`,\n      `y = ${a * -1}x^2 + ${b}x + ${c}`,\n      `y = ${a}x^2 + ${b * -1}x + ${c}`,\n      `y = ${a}x^2 + ${b}x + ${c * -1}`,\n      `y = ${a * -1}x^2 + ${b * -1}x + ${c * -1}`,\n    ];\n    return variances;\n  }\n\n  private generateVertexVariances(randRange: NumberRange): string[] {\n    const a: number = random(randRange.min, randRange.max, false);\n    const h: number = random(randRange.min, randRange.max, false);\n    const k: number = random(randRange.min, randRange.max, false);\n    const variances: string[] = [\n      `y = ${a}(x - ${h})^2 + ${k}`,\n      `y = ${a * -1}(x - ${h})^2 + ${k}`,\n      `y = ${a}(x - ${h * -1})^2 + ${k}`,\n      `y = ${a}(x - ${h * -1})^2 + ${k * -1}`,\n    ];\n    return variances;\n  }\n\n  private generateFactoredVariances(randRange: NumberRange): string[] {\n    const a: number = random(randRange.min, randRange.max, false);\n    const p: number = random(randRange.min, randRange.max, false);\n    const q: number = random(randRange.min, randRange.max, false);\n    const variances: string[] = [\n      `y = ${a}(x + ${p})(x + ${q})`,\n      `y = ${a * -1}(x + ${p})(x + ${q})`,\n      `y = ${a}(x + ${p * -1})(x + ${q * -1})`,\n      `y = ${a * -1}(x + ${p * -1})(x + ${q * -1})`,\n    ];\n    return variances;\n  }\n}\n","import { random } from 'lodash';\nimport GenerationOptions from '../entities/GenerationOptions';\nimport NumberRange from '../entities/RandRange';\nimport sanitizeEquationVariances from '../utils/sanitizeEquationVariances';\nimport MathFunction from './MathFunction';\n\nexport type TrigonometricFunctionSubType =\n  | 'COS'\n  | 'SIN'\n  | 'TAN'\n  | 'COT'\n  | 'SEC'\n  | 'CSC';\n\nexport interface TrigonometricGenerationOptions extends GenerationOptions {\n  subType?: TrigonometricFunctionSubType;\n}\n\nexport class TrigonometricFunction extends MathFunction {\n  protected subType: TrigonometricFunctionSubType;\n  protected equations: string[];\n\n  constructor({\n    subType = 'SIN',\n    randRange = { min: 10, max: 20 },\n  }: TrigonometricGenerationOptions = {}) {\n    super();\n    this.equations = this.generateVariances(subType, randRange);\n    this.equations = sanitizeEquationVariances(this.equations);\n    this.subType = subType;\n  }\n\n  private generateVariances(\n    subType: TrigonometricFunctionSubType,\n    randRange: NumberRange\n  ) {\n    const a: number = random(randRange.min, randRange.max, false);\n    const b: number = random(randRange.min, randRange.max, false);\n    const c: number = random(randRange.min, randRange.max, false);\n    const d: number = random(randRange.min, randRange.max, false);\n    const variances: string[] = [\n      `y = ${a} * ${subType.toLowerCase()}(${b}x + ${c}) + ${d}`,\n      `y = ${a * -1} * ${subType.toLowerCase()}(${b}x + ${c}) + ${d}`,\n      `y = ${a} * ${subType.toLowerCase()}(${b}x + ${c * -1}) + ${d}`,\n      `y = ${a} * ${subType.toLowerCase()}(${b}x + ${c}/${b}) + ${d}`,\n    ];\n\n    return variances;\n  }\n}\n"],"names":["MathFunction","getEquations","this","equations","getSubType","subType","sanitizeEquationVariances","equationVariances","map","equation","replace","replaceOne","replaceMinusPlus","replacePlusMinus","replacePlusPlus","replaceMinusMinus","sanitizeEquation","LinearFunction","randRange","min","max","_this","generatePointSlopeVariances","generateStandardVariances","generateSlopeInterceptVariances","m","random","b","y1","x1","a","c","QuadraticFunction","generateVertexVariances","generateFactoredVariances","h","k","p","q","TrigonometricFunction","generateVariances","d","toLowerCase"],"mappings":"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"}